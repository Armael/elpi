#!/bin/bash

# Behaves like ppxfind but promotes the files after ppx rewriting
# to the source tree and uses them if available and up to date

set -o pipefail
set -e

PPX="$1"
shift
SRC="$1"
shift

CACHEDIR="../../$(dirname ${SRC})/.ppcache"
mkdir -p ${CACHEDIR}
CACHE="${CACHEDIR}/$(basename ${SRC})"

SHA="(*$(sha1sum ${SRC}) ${PPX} ${*}*)"
if ocamlfind query -qo ppx_deriving 2>/dev/null; then
    TMP=`mktemp`
    ppxfind ${PPX} ${*} ${SRC} --as-pp > $TMP
    echo "${SHA}" > ${CACHE}
    ppxfind ${PPX} ${*} ${SRC} | lua -e "
    s = io.stdin:read('*a')
    print((s:gsub('let rec (%b())',function(x) return 'let rec '..x:sub(2,-2) end)))
    " >> ${CACHE}
    cat $TMP
    rm -f $TMP
    exit 0
elif [ -f ${CACHE} ] && [ "$(head -1 ${CACHE})" = "${SHA}" ]; then
    cat ${CACHE}
    exit 0
else
    echo "No ppx and no cache for preprocessed ${SRC}"
    exit 1
fi